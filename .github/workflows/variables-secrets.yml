name: Minikube and Helm Example
run-name: Minikube and Helm Workflow

on: push

jobs:
  minikube-helm:
    runs-on: ubuntu-latest
    env:
      APP_NAME: "myapp"
      K8S_NAMESPACE: "default"

    steps:
      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start --driver=docker
        shell: bash

      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client
        shell: bash

      # - name: Deploy a simple Helm chart
      #   run: |
      #     helm repo add bitnami https://charts.bitnami.com/bitnami
      #     helm install ${APP_NAME} bitnami/nginx --namespace ${K8S_NAMESPACE}
      #   shell: bash
      

      - name: Get existing release information
        id: get_release_info
        run: |
          helm status ${APP_NAME} --namespace ${K8S_NAMESPACE} || echo "No release found"
        shell: bash
        continue-on-error: true

      - name: Check release status
        id: check_release_status
        run: |
          if helm status ${APP_NAME} --namespace ${K8S_NAMESPACE}; then
            echo "Release exists"
            echo "release_exists=true" >> $GITHUB_ENV
          else
            echo "Release does not exist"
            echo "release_exists=false" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Helm Uninstall
        if: env.release_exists == 'true'
        run: |
          helm uninstall ${APP_NAME} --namespace ${K8S_NAMESPACE}
        shell: bash
